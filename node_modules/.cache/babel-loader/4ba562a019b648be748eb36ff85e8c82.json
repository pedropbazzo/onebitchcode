{"ast":null,"code":"import _slicedToArray from \"/home/opah/Transfer\\xEAncias/JavascriptNotesClient-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/opah/Transfer\\xEAncias/JavascriptNotesClient-master/src/components/notes/index.js\";\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { Column, Button } from \"rbx\";\nimport \"../../styles/notes.scss\";\nimport { push as Menu } from 'react-burger-menu';\nimport List from \"../notes/list\";\nimport Editor from \"../notes/editor\";\nimport Search from \"../notes/search\";\nimport NotesService from '../../services/notes';\n\nfunction Notes(props) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        notes = _useState2[0],\n        setNotes = _useState2[1];\n\n  const _useState3 = useState({\n    title: \"\",\n    body: \"\",\n    id: \"\"\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        current_note = _useState4[0],\n        setCurrentNote = _useState4[1];\n\n  async function fetchNotes() {\n    const response = await NotesService.index();\n\n    if (response.data.length >= 1) {\n      setNotes(response.data.reverse());\n      setCurrentNote(response.data[0]);\n    } else {\n      setNotes([]);\n    }\n  }\n\n  const createNote = async () => {\n    await NotesService.create();\n    fetchNotes();\n  };\n\n  const deleteNote = async note => {\n    await NotesService.delete(note._id);\n    fetchNotes();\n  };\n\n  const updateNote = async (oldNote, params) => {\n    const updatedNote = await NotesService.update(oldNote._id, params);\n    const index = notes.indexOf(oldNote);\n    const newNotes = notes;\n    newNotes[index] = updatedNote.data;\n    setNotes(newNotes);\n    setCurrentNote(updatedNote.data);\n  };\n\n  const searchNotes = async query => {\n    const response = await NotesService.search(query);\n    setNotes(response.data);\n  };\n\n  const selectNote = id => {\n    const note = notes.find(note => {\n      return note._id == id;\n    });\n    setCurrentNote(note);\n  };\n\n  useEffect(() => {\n    fetchNotes();\n  }, []);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Column.Group, {\n    className: \"notes\",\n    id: \"notes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Menu, {\n    pageWrapId: \"notes-editor\",\n    isOpen: props.isOpen,\n    onStateChange: state => props.setIsOpen(state.isOpen),\n    disableAutoFocus: true,\n    outerContainerId: \"notes\",\n    customBurgerIcon: false,\n    customCrossIcon: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Column.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Column, {\n    size: 10,\n    offset: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Search, {\n    searchNotes: searchNotes,\n    fetchNotes: fetchNotes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }))), React.createElement(List, {\n    notes: notes,\n    selectNote: selectNote,\n    current_note: current_note,\n    deleteNote: deleteNote,\n    createNote: createNote,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  })), React.createElement(Column, {\n    size: 12,\n    className: \"notes-editor\",\n    id: \"notes-editor\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(Editor, {\n    note: current_note,\n    updateNote: updateNote,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }))));\n}\n\nexport default Notes;","map":{"version":3,"sources":["/home/opah/TransferÃªncias/JavascriptNotesClient-master/src/components/notes/index.js"],"names":["React","Fragment","useEffect","useState","Column","Button","push","Menu","List","Editor","Search","NotesService","Notes","props","notes","setNotes","title","body","id","current_note","setCurrentNote","fetchNotes","response","index","data","length","reverse","createNote","create","deleteNote","note","delete","_id","updateNote","oldNote","params","updatedNote","update","indexOf","newNotes","searchNotes","query","search","selectNote","find","isOpen","state","setIsOpen"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport { Column, Button } from \"rbx\";\nimport \"../../styles/notes.scss\";\nimport { push as Menu } from 'react-burger-menu'\nimport List from \"../notes/list\";\nimport Editor from \"../notes/editor\";\nimport Search from \"../notes/search\";\nimport NotesService from '../../services/notes';\n\nfunction Notes(props) {\n  const [notes, setNotes] = useState([]);\n  const [current_note, setCurrentNote] = useState({ title: \"\", body: \"\", id: \"\" });\n\n  async function fetchNotes() {\n    const response = await NotesService.index();\n    if (response.data.length >= 1) {\n      setNotes(response.data.reverse())\n      setCurrentNote(response.data[0])\n    } else {\n      setNotes([]);\n    }\n  }\n\n  const createNote = async () => {\n    await NotesService.create();\n    fetchNotes();\n  }\n\n  const deleteNote = async (note) => {\n    await NotesService.delete(note._id);\n    fetchNotes();\n  }\n\n  const updateNote = async (oldNote, params) => {\n    const updatedNote = await NotesService.update(oldNote._id, params);\n    const index = notes.indexOf(oldNote);\n    const newNotes = notes;\n    newNotes[index] = updatedNote.data;\n    setNotes(newNotes);\n    setCurrentNote(updatedNote.data);\n  }\n\n  const searchNotes = async (query) => {\n    const response = await NotesService.search(query);\n    setNotes(response.data);\n  }\n\n  const selectNote = (id) => {\n    const note = notes.find((note) => {\n      return note._id == id;\n    })\n    setCurrentNote(note);\n  }\n\n  useEffect(() => {\n    fetchNotes();\n  }, []);\n\n  return (\n    <Fragment>\n      <Column.Group className=\"notes\" id=\"notes\">\n        <Menu\n          pageWrapId={\"notes-editor\"}\n          isOpen={props.isOpen}\n          onStateChange={(state) => props.setIsOpen(state.isOpen)}\n          disableAutoFocus\n          outerContainerId={\"notes\"}\n          customBurgerIcon={false}\n          customCrossIcon={false}\n        >\n          <Column.Group>\n            <Column size={10} offset={1}>\n              <Search searchNotes={searchNotes} fetchNotes={fetchNotes}/>\n            </Column>\n          </Column.Group>\n          <List\n            notes={notes}\n            selectNote={selectNote}\n            current_note={current_note} \n            deleteNote={deleteNote}\n            createNote={createNote}/>\n        </Menu>\n\n\n        <Column size={12} className=\"notes-editor\" id=\"notes-editor\">\n          <Editor \n            note={current_note}\n            updateNote={updateNote}  \n          />\n        </Column>\n      </Column.Group>\n    </Fragment>\n  )\n}\n\nexport default Notes;"]},"metadata":{},"sourceType":"module"}