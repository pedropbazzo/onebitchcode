{"ast":null,"code":"import _slicedToArray from \"/home/opah/Transfer\\xEAncias/JavascriptNotesClient-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/opah/Transfer\\xEAncias/JavascriptNotesClient-master/src/components/users/user_edit_form/index.js\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { Button, Field, Control, Input, Column, Title, Help, Label } from \"rbx\";\nimport UsersService from '../../../services/users';\n\nfunction UsersEditForm() {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        email = _useState2[0],\n        setEmail = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        name = _useState4[0],\n        setName = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        status = _useState6[0],\n        setStatus = _useState6[1];\n\n  const initializeUser = async () => {\n    const user = await JSON.parse(localStorage.getItem('user'));\n    setName(user['name']);\n    setEmail(user['email']);\n  };\n\n  useEffect(() => {\n    initializeUser();\n  }, []);\n\n  const handleSubmit = async evt => {\n    evt.preventDefault();\n\n    try {\n      await UsersService.update({\n        email: email,\n        name: name\n      });\n      setStatus(\"success\");\n    } catch (err) {\n      setStatus(\"error\");\n    }\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Control, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Label, {\n    className: \"has-text-grey\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Full Name\"), React.createElement(Input, {\n    type: \"name\",\n    value: name || \"\",\n    onChange: e => setName(e.target.value),\n    required: true,\n    name: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }))), React.createElement(Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Control, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Label, {\n    className: \"has-text-grey\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Email\"), React.createElement(Input, {\n    type: \"email\",\n    value: email || \"\",\n    onChange: e => setEmail(e.target.value),\n    required: true,\n    name: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }))), React.createElement(Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Control, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Column.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Column, {\n    className: \"has-text-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"custom-purple\",\n    outlined: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Update\"))))), status == \"error\" && React.createElement(Help, {\n    color: \"danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Problem in update\"), status == \"success\" && React.createElement(Help, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Updated with success\")));\n}\n\nexport default UsersEditForm;","map":{"version":3,"sources":["/home/opah/TransferÃªncias/JavascriptNotesClient-master/src/components/users/user_edit_form/index.js"],"names":["React","Fragment","useState","useEffect","Button","Field","Control","Input","Column","Title","Help","Label","UsersService","UsersEditForm","email","setEmail","name","setName","status","setStatus","initializeUser","user","JSON","parse","localStorage","getItem","handleSubmit","evt","preventDefault","update","err","e","target","value"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport { Button, Field, Control, Input, Column, Title, Help, Label } from \"rbx\";\nimport UsersService from '../../../services/users';\n\nfunction UsersEditForm() {\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [status, setStatus] = useState(null);\n\n  const initializeUser = async () => {\n    const user = await JSON.parse(localStorage.getItem('user'));\n    setName(user['name']);\n    setEmail(user['email']);\n  }\n\n  useEffect(() =>{\n    initializeUser()    \n  }, [])\n\n  const handleSubmit = async (evt) => {\n    evt.preventDefault();\n\n    try {\n      await UsersService.update({ email: email, name: name });\n      setStatus(\"success\")\n    } catch (err) {\n      setStatus(\"error\")\n    }\n  }\n\n  return (\n    <Fragment>\n      <form onSubmit={handleSubmit}>\n        <Field>\n          <Control>\n            <Label className=\"has-text-grey\">Full Name</Label>\n            <Input\n              type=\"name\"\n              value={name || \"\"}\n              onChange={e => setName(e.target.value)}\n              required\n              name=\"name\"\n            />\n          </Control>\n        </Field>\n        <Field>\n          <Control>\n            <Label className=\"has-text-grey\">Email</Label>\n            <Input\n              type=\"email\"\n              value={email || \"\"}\n              onChange={e => setEmail(e.target.value)}\n              required\n              name=\"email\"\n            />\n          </Control>\n        </Field>\n\n        <Field>\n          <Control>\n            <Column.Group>\n              <Column className=\"has-text-right\">\n                <Button color=\"custom-purple\" outlined>Update</Button>\n              </Column>\n            </Column.Group>\n          </Control>\n        </Field>\n        {status == \"error\" &&\n          <Help color=\"danger\">Problem in update</Help>\n        }\n        {status == \"success\" &&\n          <Help color=\"primary\">Updated with success</Help>\n        }\n      </form>\n    </Fragment>\n  )\n\n\n}\n\nexport default UsersEditForm;"]},"metadata":{},"sourceType":"module"}