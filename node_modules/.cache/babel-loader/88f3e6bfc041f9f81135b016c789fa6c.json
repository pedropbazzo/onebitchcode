{"ast":null,"code":"import _slicedToArray from \"/home/opah/Transfer\\xEAncias/JavascriptNotesClient-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/opah/Transfer\\xEAncias/JavascriptNotesClient-master/src/components/auth/register_form/index.js\";\nimport React, { Fragment, useState } from 'react';\nimport { Button, Field, Control, Input, Column, Section, Help, Label } from \"rbx\";\nimport { Redirect } from \"react-router-dom\";\nimport UsersService from '../../../services/users';\n\nfunction RegisterForm() {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        email = _useState4[0],\n        setEmail = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        password = _useState6[0],\n        setPassword = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        redirectToLogin = _useState8[0],\n        setRedirectToLogin = _useState8[1];\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        error = _useState10[0],\n        setError = _useState10[1];\n\n  const HandleSubmit = async evt => {\n    evt.preventDefault();\n\n    try {\n      const user = await UsersService.register({\n        name: name,\n        email: email,\n        password: password\n      });\n      setRedirectToLogin(true);\n    } catch (error) {\n      setError(true);\n    }\n  };\n\n  if (redirectToLogin) return React.createElement(Redirect, {\n    to: {\n      pathname: \"/login\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  });\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Column.Group, {\n    centered: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: HandleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Column, {\n    size: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Label, {\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Name:\"), React.createElement(Control, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Input, {\n    type: \"name\",\n    required: true,\n    name: \"name\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }))), React.createElement(Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Label, {\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Email:\"), React.createElement(Control, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Input, {\n    type: \"email\",\n    required: true,\n    name: \"email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }))), React.createElement(Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Label, {\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Password:\"), React.createElement(Control, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Input, {\n    type: \"password\",\n    required: true,\n    name: \"password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }))), React.createElement(Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Control, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Column.Group, {\n    breakpoint: \"mobile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    className: \"button is-white has-text-custom-purple\",\n    onClick: e => setRedirectToLogin(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Login or\")), React.createElement(Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"custom-purple\",\n    outlined: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Register\"))))), error && React.createElement(Help, {\n    color: \"danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Email or Password invalid\")))));\n}\n\nexport default RegisterForm;","map":{"version":3,"sources":["/home/opah/TransferÃªncias/JavascriptNotesClient-master/src/components/auth/register_form/index.js"],"names":["React","Fragment","useState","Button","Field","Control","Input","Column","Section","Help","Label","Redirect","UsersService","RegisterForm","name","setName","email","setEmail","password","setPassword","redirectToLogin","setRedirectToLogin","error","setError","HandleSubmit","evt","preventDefault","user","register","pathname","e","target","value"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport { Button, Field, Control, Input, Column, Section, Help, Label } from \"rbx\";\nimport { Redirect } from \"react-router-dom\";\nimport UsersService from '../../../services/users';\n\n\nfunction RegisterForm() {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [redirectToLogin, setRedirectToLogin] = useState(false);\n  const [error, setError] = useState(false);\n\n  const HandleSubmit = async (evt) => {\n    evt.preventDefault();\n    try {\n      const user = await UsersService.register({name: name,email: email,password: password});\n      setRedirectToLogin(true);\n    } catch (error) {\n      setError(true);\n    }\n  }\n\n\n  if(redirectToLogin)\n    return <Redirect to={{pathname: \"/login\"}}/>\n\n  return (\n    <Fragment>\n      <Column.Group centered>\n        <form onSubmit={HandleSubmit}>\n          <Column size={12}>\n            <Field>\n              <Label size=\"small\">Name:</Label>\n              <Control>\n                <Input\n                  type=\"name\"\n                  required\n                  name=\"name\"\n                  value={name}\n                  onChange={e => setName(e.target.value)}\n                />\n              </Control>\n            </Field>\n            <Field>\n              <Label size=\"small\">Email:</Label>\n              <Control>\n                <Input \n                  type=\"email\" \n                  required\n                  name=\"email\"\n                  value={email}\n                  onChange={e => setEmail(e.target.value)}\n                />\n              </Control>\n            </Field>\n            <Field>\n              <Label size=\"small\">Password:</Label>\n              <Control>\n                <Input \n                  type=\"password\" \n                  required\n                  name=\"password\"\n                  value={password}\n                  onChange={e => setPassword(e.target.value)}\n                />\n              </Control>\n            </Field>\n            <Field>\n              <Control>\n                <Column.Group breakpoint=\"mobile\">\n                  <Column>\n                    <a className=\"button is-white has-text-custom-purple\"\n                       onClick={e => setRedirectToLogin(true)}\n                    >Login or</a>\n                  </Column>\n                  <Column>\n                    <Button color=\"custom-purple\" outlined>Register</Button>\n                  </Column>\n                </Column.Group>\n              </Control>\n            </Field>\n            { error && <Help color=\"danger\">Email or Password invalid</Help> }\n          </Column>\n        </form>\n      </Column.Group>\n    </Fragment>\n  )\n}\n\nexport default RegisterForm;"]},"metadata":{},"sourceType":"module"}